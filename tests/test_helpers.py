import unittest
from data_processing.helpers import *


class TestHelpers(unittest.TestCase):
    def test_get_filename(self):
        self.assertEqual(get_filename('somefile.txt'), 'somefile')
        self.assertEqual(get_filename('qwe.cvs'), 'qwe')
        self.assertEqual(get_filename('a.png'), 'a')
        self.assertEqual(get_filename('b.exe'), 'b')
        self.assertEqual(get_filename('c.dll'), 'c')
        self.assertEqual(get_filename('d.py'), 'd')
        self.assertEqual(get_filename('e.pyc'), 'e')
        self.assertEqual(get_filename('no_extension'), 'no_extension')
        self.assertEqual(get_filename('with space.txt'), 'with space')
        self.assertEqual(get_filename('with two spaces.csv'), 'with two spaces')
        self.assertEqual(get_filename('with random s p a c e s.qwerty'), 'with random s p a c e s')
        self.assertEqual(get_filename('.pyc'), '.pyc')
        self.assertEqual(get_filename('.cpp'), '.cpp')
        self.assertEqual(get_filename('.a'), '.a')
        self.assertEqual(get_filename(''), '')
        self.assertEqual(get_filename('dir/with space.txt'), 'with space')
        self.assertEqual(get_filename('dir with space/another dir/with space.txt'), 'with space')
        self.assertRaises(TypeError, get_filename, 3.2)
        self.assertRaises(TypeError, get_filename, 100)
        self.assertRaises(TypeError, get_filename, ['text.txt'])

    def test_get_extension(self):
        self.assertEqual(get_extension('somefile.txt'), '.txt')
        self.assertEqual(get_extension('qwe.cvs'), '.cvs')
        self.assertEqual(get_extension('a.png'), '.png')
        self.assertEqual(get_extension('b.exe'), '.exe')
        self.assertEqual(get_extension('c.dll'), '.dll')
        self.assertEqual(get_extension('d.py'), '.py')
        self.assertEqual(get_extension('e.pyc'), '.pyc')
        self.assertEqual(get_extension('no_extension'), '')
        self.assertEqual(get_extension('with space.txt'), '.txt')
        self.assertEqual(get_extension('with two spaces.csv'), '.csv')
        self.assertEqual(get_extension('with random s p a c e s.qwerty'), '.qwerty')
        self.assertEqual(get_extension('.pyc'), '')
        self.assertEqual(get_extension('.cpp'), '')
        self.assertEqual(get_extension('.a'), '')
        self.assertEqual(get_extension(''), '')
        self.assertEqual(get_extension('dir/with space.txt'), '.txt')
        self.assertEqual(get_extension('dir with space/another dir/with space.txt'), '.txt')
        self.assertRaises(TypeError, get_extension, 3.2)
        self.assertRaises(TypeError, get_extension, 100)
        self.assertRaises(TypeError, get_extension, ['text.txt'])

    def test_years_to_ms(self):
        self.assertEqual(years_to_ms(1), 31556952000)
        self.assertEqual(years_to_ms(2), 63113904000)
        self.assertEqual(years_to_ms(3), 94670856000)
        self.assertEqual(years_to_ms(4), 126227808000)
        self.assertEqual(years_to_ms(5), 157784760000)
        self.assertEqual(years_to_ms(6), 189341712000)
        self.assertEqual(years_to_ms(7), 220898664000)
        self.assertEqual(years_to_ms(8), 252455616000)
        self.assertEqual(years_to_ms(9), 284012568000)
        self.assertEqual(years_to_ms(10), 315569520000)
        self.assertEqual(years_to_ms(10), 315569520000)
        self.assertRaises(Exception, years_to_ms, -3.2)
        self.assertRaises(ValueError, years_to_ms, '1w')
